@{
    Layout = "~/Views/Shared/admin.cshtml";
}
@model IEnumerable<HospitalManagementSystem.Models.Appointment>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Appointment Scheduling - Hospital System</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- FontAwesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <style>
        body {
            background: #f4f7f6;
            font-family: Arial, sans-serif;
        }

        .container {
            margin-top: 50px;
        }

        .card {
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }

        .table th {
            background: linear-gradient(to right, #1e3c72, #2a5298);
            color: white;
        }

        .table td, .table th {
            text-align: center;
            vertical-align: middle;
        }

        .btn {
            padding: 5px 10px;
        }

        .action-icons i {
            font-size: 18px;
            margin: 0 5px;
            cursor: pointer;
        }

            .action-icons i:hover {
                color: linear-gradient(to right, #1e3c72, #2a5298);
            }


        .gradient-text {
            background: linear-gradient(to right, #1e3c72, #2a5298);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: bold;
        }
    </style>
</head>
<body>

    <div class="container">
        <div class="card p-3">
           
            <h2 class="text-center mb-3 gradient-text">
                <i class="fa-solid fa-calendar-check"></i> Appointment Scheduling
            </h2>
            <!-- Search & Add Appointment -->
            <div class="d-flex justify-content-between mb-3">
                <input type="text" class="form-control w-25" placeholder="🔍 Search Appointments..." id="searchAppointment">
          
            </div>

            <!-- Appointment Table -->
            <div class="table-responsive">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Appointment ID</th>
                            <th>Patient ID</th>
                            <th>Doctor ID</th>
                            <th>Appointment Date</th>
                            <th>Status</th>
                            <th>Reason</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="appointmentTable">
                        @foreach (var appointment in Model)
                        {
                            <tr>
                                <td>@appointment.AppointmentId</td>
                                <td>@appointment.PatientId</td>
                                <td>@appointment.DoctorId</td>
                                <td>@appointment.AppointmentDate.ToString("yyyy-MM-dd HH:mm tt")</td>
                                <td>@appointment.AppointmentStatus</td>
                                <td>@appointment.Reason</td>
                                <td class="action-icons">
                                    <button class="btn btn-warning btn-edit"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editAppointmentModal"
                                            data-id="@appointment.AppointmentId"
                                            data-patient="@appointment.PatientId"
                                            data-doctor="@appointment.DoctorId"
                                            data-date="@appointment.AppointmentDate.ToString("yyyy-MM-ddTHH:mm")"
                                            data-status="@appointment.AppointmentStatus"
                                            data-reason="@appointment.Reason">
                                        <i class="fa-solid fa-edit"></i>
                                    </button>

                                    <a href="@Url.Action("DeleteAppointmentScheduling", "Appointment", new { id = appointment.AppointmentId })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this appointment?')">
                                        <i class="fa-solid fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Edit Appointment Modal -->
    <div class="modal fade" id="editAppointmentModal" tabindex="-1" aria-labelledby="editAppointmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post" action="/Appointment/EditAppointmentScheduling">
                    @Html.AntiForgeryToken()
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title" id="editAppointmentModalLabel"><i class="fa-solid fa-pen-to-square"></i> Edit Appointment</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body row g-3 px-4">
                        <input type="hidden" id="editAppointmentId" name="AppointmentId" />

                        <div class="col-md-6">
                            <label for="editPatientId" class="form-label">Patient ID</label>
                            <input type="text" class="form-control" id="editPatientId" name="PatientId" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editDoctorId" class="form-label">Doctor ID</label>
                            <input type="text" class="form-control" id="editDoctorId" name="DoctorId" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editAppointmentDate" class="form-label">Appointment Date</label>
                            <input type="datetime-local" class="form-control" id="editAppointmentDate" name="AppointmentDate" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editStatus" class="form-label">Status</label>
                            <select class="form-select" id="editStatus" name="AppointmentStatus">
                                <option>Available</option>
                                <option>Occupied</option>
                                <option>Under Maintenance</option>
                            </select>
                        </div>

                        <div class="col-md-12">
                            <label for="editReason" class="form-label">Reason</label>
                            <textarea class="form-control" id="editReason" name="Reason" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer px-4">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">Update Appointment</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS + Script to Fill Modal -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const editButtons = document.querySelectorAll('.btn-edit');
            editButtons.forEach(button => {
                button.addEventListener('click', () => {
                    document.getElementById('editAppointmentId').value = button.dataset.id;
                    document.getElementById('editPatientId').value = button.dataset.patient;
                    document.getElementById('editDoctorId').value = button.dataset.doctor;
                    document.getElementById('editAppointmentDate').value = button.dataset.date;
                    document.getElementById('editStatus').value = button.dataset.status;
                    document.getElementById('editReason').value = button.dataset.reason;
                });
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const editButtons = document.querySelectorAll('.btn-edit');
            editButtons.forEach(button => {
                button.addEventListener('click', () => {
                    document.getElementById('editAppointmentId').value = button.dataset.id;
                    document.getElementById('editPatientId').value = button.dataset.patient;
                    document.getElementById('editDoctorId').value = button.dataset.doctor;
                    document.getElementById('editAppointmentDate').value = button.dataset.date;
                    document.getElementById('editStatus').value = button.dataset.status;
                    document.getElementById('editReason').value = button.dataset.reason;
                });
            });

            // Live Search Logic
            const searchInput = document.getElementById('searchAppointment');
            const tableRows = document.querySelectorAll('#appointmentTable tr');

            searchInput.addEventListener('keyup', function () {
                const searchText = this.value.toLowerCase();

                tableRows.forEach(row => {
                    const rowText = row.innerText.toLowerCase();
                    row.style.display = rowText.includes(searchText) ? '' : 'none';
                });
            });
        });
    </script>

</body>
</html>
