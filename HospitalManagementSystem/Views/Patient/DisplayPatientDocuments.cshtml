@model IEnumerable<HospitalManagementSystem.Models.patient_documents>
@using System.IO

@{
    Layout = "~/Views/Shared/admin.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Patient Documents - Hospital System</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <style>
        body {
            background: #f4f7f6;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 95%;
            margin: auto;
            padding: 20px;
        }

        .card {
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }

        .table-responsive {
            max-height: 500px;
            overflow-y: auto;
        }

        .table th {
            background: linear-gradient(to right, #1e3c72, #2a5298);
            color: white;
        }

        .table td, .table th {
            text-align: center;
            vertical-align: middle;
            white-space: nowrap;
        }

        .btn {
            padding: 5px 10px;
        }

        .search-bar {
            width: 300px;
        }

        .action-icons i {
            font-size: 18px;
            margin: 0 5px;
            cursor: pointer;
        }

            .action-icons i:hover {
                color: #007bff;
            }

        .gradient-text {
            background: linear-gradient(to right, #1e3c72, #2a5298);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <h2 class="text-center mb-3 gradient-text">
                <i class="fa-solid fa-file-medical"></i> Patient Documents
            </h2>

            <!-- Search & Upload Document -->
            <div class="d-flex justify-content-between mb-3">
                <input type="text" class="form-control search-bar" placeholder="🔍 Search Documents..." id="searchDocuments">
              
            </div>

            <!-- Documents Table -->
            <div class="table-responsive">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Actions</th>
                            <th>Document ID</th>
                            <th>Patient ID</th>
                            <th>Document Type</th>
                            <th>Document Name</th>
                            <th>Document Number</th>
                            <th>Document Path</th>
                           @*  <th>Upload By</th> *@
                            <th>Upload Date</th>
                            <th>Remarks</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var doc in Model)
                            {
                                <tr>
                                    <td class="action-icons">
                                        <!-- Edit Button -->
                                        <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editModal"
                                                data-id="@doc.DocumentId"
                                                data-patientid="@doc.PatientId"
                                                data-doctype="@doc.DocumentType"
                                                data-docname="@doc.DocumentName"
                                                data-docnumber="@doc.DocumentNumber"
                                                data-docpath="@doc.DocumentPath"
                                                data-uploadedby="@doc.UploadedBy"
                                                data-uploadeddate="@doc.UploadDate.ToShortDateString()"
                                                data-remarks="@doc.Remarks">
                                            <i class="fa-solid fa-pen"></i> 
                                        </button>
                                        <!-- Delete Button -->
                                        <a href="@Url.Action("DeletePatientDocuments", "Patient", new { id = doc.DocumentId })"
                                           title="Delete" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this document?');">
                                            <i class="fa-solid fa-trash"></i>
                                        </a>

                                    </td>
                                    <td>@doc.DocumentId</td>
                                    <td>@doc.PatientId</td>
                                    <td>@doc.DocumentType</td>
                                    <td>@doc.DocumentName</td>
                                    <td>@doc.DocumentNumber</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(doc.DocumentPath))
                                        {
                                            <a href="@Url.Action("DownloadDocument", "Patient", new { filename = System.IO.Path.GetFileName(doc.DocumentPath) })" target="_blank">View File</a>

                                        }
                                        else
                                        {
                                            <span>No File</span>
                                        }
                                    </td>

                                    <td>@doc.UploadDate.ToShortDateString()</td>
                                    <td>@doc.Remarks</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center text-danger">No documents found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Patient Document</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="@Url.Action("EditPatientDocuments", "Patient")" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="DocumentId" name="DocumentId" />

                        <div class="mb-3">
                            <label for="PatientId" class="form-label">Patient ID</label>
                            <input type="text" class="form-control" id="PatientId" name="PatientId" readonly />
                        </div>

                        <div class="mb-3">
                            <label for="DocumentType" class="form-label">Document Type</label>
                            <input type="text" class="form-control" id="DocumentType" name="DocumentType" required />
                        </div>

                        <div class="mb-3">
                            <label for="DocumentName" class="form-label">Document Name</label>
                            <input type="text" class="form-control" id="DocumentName" name="DocumentName" required />
                        </div>

                        <div class="mb-3">
                            <label for="DocumentNumber" class="form-label">Document Number</label>
                            <input type="text" class="form-control" id="DocumentNumber" name="DocumentNumber" required />
                        </div>

                        <!-- Optional: Read-only DocumentPath, UploadedBy, and UploadDate display -->
                        <div class="mb-3">
                            <label for="DocumentPath" class="form-label">File Path</label>
                            <input type="text" class="form-control" id="DocumentPath" name="DocumentPath" readonly />
                        </div>

                        <div class="mb-3">
                           @*  <label for="UploadedBy" class="form-label">Uploaded By</label> *@
                            <input type="hidden" class="form-control" id="UploadedBy" name="UploadedBy" readonly />
                        </div>

                        <div class="mb-3">
                            <label for="UploadDate" class="form-label">Upload Date</label>
                            <input type="text" class="form-control" id="UploadDate" name="UploadDate" readonly />
                        </div>

                        <div class="mb-3">
                            <label for="Remarks" class="form-label">Remarks</label>
                            <textarea class="form-control" id="Remarks" name="Remarks"></textarea>
                        </div>

                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </form>

                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript to fill modal fields with selected document data -->
    <script>
               var editModal = document.getElementById('editModal');
        editModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;

            document.getElementById('DocumentId').value = button.getAttribute('data-id');
            document.getElementById('PatientId').value = button.getAttribute('data-patientid');
            document.getElementById('DocumentType').value = button.getAttribute('data-doctype');
            document.getElementById('DocumentName').value = button.getAttribute('data-docname');
            document.getElementById('DocumentNumber').value = button.getAttribute('data-docnumber');
            document.getElementById('DocumentPath').value = button.getAttribute('data-docpath');
            document.getElementById('UploadedBy').value = button.getAttribute('data-uploadedby');
            document.getElementById('UploadDate').value = button.getAttribute('data-uploadeddate');
            document.getElementById('Remarks').value = button.getAttribute('data-remarks');
        });

    </script>

    <script>
        // Filter table rows based on search input
        document.getElementById('searchDocuments').addEventListener('input', function () {
            var searchTerm = this.value.toLowerCase();
            var tableRows = document.querySelectorAll("table tbody tr");

            tableRows.forEach(function (row) {
                var rowText = row.innerText.toLowerCase();
                row.style.display = rowText.includes(searchTerm) ? '' : 'none';
            });
        });
    </script>

</body>
</html>
